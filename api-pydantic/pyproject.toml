[tool.poetry]
name = "api-pydantic"
version = "0.1.0"
description = ""
authors = ["Jerry <zhangji87@gmail.com>"]
readme = "README.md"
packages = [
    { include = "apipydantic" }
]

[tool.poetry.dependencies]
python = "^3.10"
flask = "^3.0.0"
pydantic = {extras = ["email"], version = "^2.5.3"}
flask-sqlalchemy = "^3.1.1"
sqlmodel = "^0.0.14"
python-dotenv = "^1.0.1"
openapi-pydantic = "^0.4.0"
spectree = "^1.2.9"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.11"
mypy = "^1.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple/"
priority = "default"

[tool.ruff]
select = ["E", "F", "W", "Q", "COM", "I", "N", "B", "RUF"]
line-length = 100
target-version = "py310"

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401"]

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.mypy]
plugins = [
    'pydantic.mypy',
]
